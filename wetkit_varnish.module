<?php
/**
 * @file
 * wetkit_varnish.module
 */

include_once 'includes/wetkit_varnish.bans.inc';
include_once 'includes/wetkit_varnish.expire.inc';
include_once 'includes/wetkit_varnish.maxage.inc';
include_once 'includes/wetkit_varnish.multi_domain.inc';
include_once 'theme/wetkit_varnish.theme.inc';

/**
 * Implements hook_menu().
 */
function wetkit_varnish_menu() {
  $items = array();
  $items['admin/config/development/varnish/bans'] = array(
    'type'              => MENU_LOCAL_TASK,
    'title'             => 'Bans',
    'description'       => 'Bans pages from varish cache',
    'page callback'     => 'drupal_get_form',
    'page arguments'   => array('wetkit_varnish_bans_admin_settings_form'),
    'access arguments' => array('ban pages in varnish'),
    'file' => 'wetkit_varnish.admin.inc',
    'file path' => drupal_get_path('module', 'wetkit_varnish'),
  );
  $items['admin/config/development/varnish/maxage'] = array(
    'type'             => MENU_LOCAL_TASK,
    'title'            => 'max-age',
    'description'      => 'Use the varnish maxage module to manualy set s-maxage and max-age on content',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('wetkit_varnish_maxage_admin_settings_form'),
    'access arguments' => array('administer varnish'),
    'file' => 'wetkit_varnish.admin.inc',
    'file path' => drupal_get_path('module', 'wetkit_varnish'),
  );
  $items['admin/config/development/varnish/multi_domain'] = array(
    'type'             => MENU_LOCAL_TASK,
    'title'            => 'multi domain',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('wetkit_varnish_multi_domain_admin_settings_form'),
    'access arguments' => array('administer varnish'),
    'file' => 'wetkit_varnish.admin.inc',
    'file path' => drupal_get_path('module', 'wetkit_varnish'),
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function wetkit_varnish_permission() {
  return array(
    'ban pages in varnish' => array(
      'title' => t('Ban pages in Varnish'),
      'description' => t('Manualy force update of pages in varnish cache'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function wetkit_varnish_theme($existing, $type, $theme, $path) {
  return array(
    'wetkit_varnish_maxage_table' => array(
      'render element' => 'form',
    ),
  );
}

/**
 * Check the cache header of the home page
 */
function wetkit_varnish_check_site() {
  // Load the home page
  $url = url('<front>', array('absolute' => TRUE));
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, $url);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($ch, CURLOPT_HEADER, 1);
  curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
  $response = curl_exec($ch);
  curl_close($ch);

  // Make an array
  list($header, $body) = explode("\r\n\r\n", $response, 2);
  $raw_headers = explode("\r\n", $header);
  $headers = array();
  foreach($raw_headers as $raw_header) {
    $raw_header = explode(': ', $raw_header);
    if(count($raw_header) > 1) {
      $headers[strtolower($raw_header[0])] = $raw_header[1];
    }
  }

  if(!isset($headers['via']) || !isset($headers['cache-control'])) {
    return FALSE;
  }

  // @testing
  // For Varnish to be working you need it serving content
  // and for the max-age to be set and greater than 0
  // max-age is the number of seconds the browser is told it can cache this
  // information for
  // You can uncomment this for local testing:
  // $headers['via'] = 'Varnish';
  // $headers['cache-control'] = 'public, max-age=10800';

  // ensure max-age is set correctly
  preg_match_all("/max-age=([0-9]*)/", $headers['cache-control'], $matches);

  // Bad: Cache-Control: no-cache, must-revalidate, post-check=0, pre-check=0
  // Good (Varnish): Cache-Control: public, max-age=[some number of seconds]
  // Re: http://helpdesk.getpantheon.com/customer/portal/articles/425726-working-with-varnish-on-pantheon
  return isset($matches[1][0]) && is_numeric($matches[1][0]) && $matches[1][0] > 0
    && strpos($headers['cache-control'], 'public') !== FALSE;
}
